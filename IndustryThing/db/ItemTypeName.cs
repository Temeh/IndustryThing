using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Configuration;
using System.IO;
using System.Net;
using System.Xml;

namespace IndustryThing.db
{
    class ItemTypeName : Misc.UsefullMethods
    {
        string[] itemTypeName = new string[500000];

        /// <summary>
        /// Constructor, Reads the content of ItemTypeName.xml
        /// </summary>
        public ItemTypeName()
        {
            try
            {
                StreamReader sr = new StreamReader("ItemTypeName.xml");
                while (!sr.EndOfStream)
                {
                    string line = RemoveSpaceFromStartOfLine(sr.ReadLine());
                    if (line.StartsWith("<Item>"))
                    {
                        line = RemoveSpaceFromStartOfLine(sr.ReadLine());
                        while (!line.StartsWith("</Item>"))
                        {                       
                            int index = Convert.ToInt32(GetValue(line, "<id", ">"));
                            itemTypeName[index] = GetValue(line, ">", "<");
                            line = RemoveSpaceFromStartOfLine(sr.ReadLine());
                        }
                    }

                }
            }
            catch (Exception)
            {
                return;
            }

        }

        /// <summary>
        /// This method takes an item's typeID and return its typeName
        /// </summary>
        /// <param name="id">eve item typeID</param>
        /// <returns></returns>
        public string GetItemName(int id)
        {
            if (itemTypeName[id] != null)
            {
                return itemTypeName[id];
            }
            else
            {
                string deletethisstring = "https://api.eveonline.com/" + "Eve/TypeName.xml.aspx?" + "ids=" + id; // only for debugging
                WebRequest wrGetXml = WebRequest.Create("https://api.eveonline.com/" + "Eve/TypeName.xml.aspx?" + "ids=" + id);
                Stream objStream = wrGetXml.GetResponse().GetResponseStream();
                StreamReader objReader = new StreamReader(objStream);
                while (!objReader.EndOfStream)
                {
                    string line = RemoveSpaceFromStartOfLine(objReader.ReadLine());
                    if (line.StartsWith("<row "))
                    {
                        itemTypeName[id] = GetValue(line, "typeName=\"", "\"");
                    }
                }
                return itemTypeName[id];
            }

        }

        public void SaveXML()
        {
            XmlWriterSettings settings = new XmlWriterSettings();
            settings.Indent = true;

            XmlWriter writer = XmlWriter.Create("ItemTypeName.xml", settings);
            writer.WriteStartDocument();
            writer.WriteComment("This file is generated by the program.");
            writer.WriteStartElement("Item");
            int i = 1;
            while (i < itemTypeName.Length)
            {
                if (itemTypeName[i] != null)
                {
                    writer.WriteElementString("id" + i.ToString(), itemTypeName[i]);
                }
                i++;
            }
            
            writer.WriteEndElement();
            writer.WriteEndDocument();

            writer.Flush();
            writer.Close();
        }
    }
}
